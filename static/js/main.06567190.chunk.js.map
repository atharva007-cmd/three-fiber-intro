{"version":3,"sources":["components/header.js","App.js","reportWebVitals.js","index.js"],"names":["Header","className","softShadows","SpinningMesh","position","color","speed","args","mesh","useRef","useFrame","current","rotation","x","y","useState","expand","setExpand","props","useSpring","scale","ref","onClick","castShadow","attach","factor","App","colorManagement","shadowMap","camera","fov","intensity","shadow-mapSize-width","shadow-mapSize-height","shadow-camera-far","shadow-camera-left","shadow-camera-right","shadow-camera-top","shadow-camera-bottom","Math","PI","receiveShadow","opacity","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.06567190.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nconst Header = () => {\r\n\treturn (\r\n\t\t<header>\r\n\t\t\t<div className=\"logo\">\r\n\t\t\t\t<span>REACT THREE FIBER</span>\r\n\t\t\t</div>\r\n\t\t\t<div className=\"details\">\r\n\t\t\t\t<h4 className=\"heading\">Canvas</h4>\r\n\t\t\t\t<span className=\"content\">\r\n\t\t\t\t\tThe canvas object is your portal into three.js.<br></br>\r\n\t\t\t\t\tIt renders three.js elements and not DOM elements.<br></br>\r\n\t\t\t\t\tDefaults setup:<br></br>- Translucent WebGL-renderer{\" \"}\r\n\t\t\t\t\t<br></br>- Perspective camera <br></br>- Orthographic camera{\" \"}\r\n\t\t\t\t\t<br></br>- A scene <br></br>- Wrapping container with\r\n\t\t\t\t\tresizable observer <br></br>\r\n\t\t\t\t</span>\r\n\t\t\t\t<h4 className=\"heading\">Ambient Light</h4>\r\n\t\t\t\t<span className=\"content\">\r\n\t\t\t\t\tThis light globally illuminates all objects in the scene\r\n\t\t\t\t\tequally.<br></br>\r\n\t\t\t\t\tThis light cannot be used to cast shadows as it does not\r\n\t\t\t\t\thave any direction.<br></br>\r\n\t\t\t\t</span>\r\n\t\t\t\t<h4 className=\"heading\">Directional Light</h4>\r\n\t\t\t\t<span className=\"content\">\r\n\t\t\t\t\tA light that gets emmited in a specific direction.<br></br>\r\n\t\t\t\t\tThis light acts as if it's infinitely far away and rays\r\n\t\t\t\t\tproduced are parallel.<br></br>A common usecase is daylight\r\n\t\t\t\t\tsimulation.<br></br>\r\n\t\t\t\t</span>\r\n\t\t\t\t<h4 className=\"heading\">Point Light</h4>\r\n\t\t\t\t<span className=\"content\">\r\n\t\t\t\t\tA light that gets emmited from a single point in all\r\n\t\t\t\t\tdirection.<br></br>A common usecase is simulation of light\r\n\t\t\t\t\temmited from bare lightbulb.<br></br>\r\n\t\t\t\t</span>\r\n\t\t\t</div>\r\n\t\t</header>\r\n\t);\r\n};\r\n\r\nexport default Header;\r\n","import React, { useRef, useState } from \"react\";\n//R3F\nimport { Canvas, useFrame } from \"react-three-fiber\";\n// Deai - R3F\nimport { softShadows, MeshWobbleMaterial, OrbitControls } from \"drei\";\n//Components\nimport Header from \"./components/header\";\n// Styles\nimport \"./App.scss\";\n// React Spring\nimport { useSpring, a } from \"react-spring/three\";\n\n// soft Shadows\nsoftShadows({});\n\nconst SpinningMesh = ({ position, color, speed, args }) => {\n\t//ref to target the mesh\n\tconst mesh = useRef(null);\n\n\t//useFrame allows us to re-render/update rotation on each frame\n\tuseFrame(() => (mesh.current.rotation.x = mesh.current.rotation.y += 0.01));\n\n\t//Basic expand state\n\tconst [expand, setExpand] = useState(false);\n\t// React spring expand animation\n\tconst props = useSpring({\n\t\tscale: expand ? [1.4, 1.4, 1.4] : [1, 1, 1],\n\t});\n\treturn (\n\t\t<a.mesh\n\t\t\tposition={position}\n\t\t\tref={mesh}\n\t\t\tonClick={() => setExpand(!expand)}\n\t\t\tscale={props.scale}\n\t\t\tcastShadow\n\t\t>\n\t\t\t<boxBufferGeometry attach=\"geometry\" args={args} />\n\t\t\t<MeshWobbleMaterial\n\t\t\t\tcolor={color}\n\t\t\t\tspeed={speed}\n\t\t\t\tattach=\"material\"\n\t\t\t\tfactor={0.5}\n\t\t\t/>\n\t\t</a.mesh>\n\n\t\t//Using Drei box if you want\n\t\t// <Box {...props} ref={mesh} castShadow>\n\t\t//   <MeshWobbleMaterial\n\t\t//     {...props}\n\t\t//     attach='material'\n\t\t//     factor={0.5}\n\t\t//     Speed={1}\n\t\t//   />\n\t\t// </Box>\n\t);\n};\n\nconst App = () => {\n\treturn (\n\t\t<>\n\t\t\t<Header />\n\t\t\t{/* Our Scene & Camera is already built into our canvas */}\n\t\t\t<Canvas\n\t\t\t\tcolorManagement\n\t\t\t\tshadowMap\n\t\t\t\tcamera={{ position: [-5, 2, 10], fov: 70 }}\n\t\t\t>\n\t\t\t\t{/* This light makes things look pretty */}\n\t\t\t\t<ambientLight intensity={0.3} />\n\t\t\t\t{/* Our main source of light, also casting our shadow */}\n\t\t\t\t<directionalLight\n\t\t\t\t\tcastShadow\n\t\t\t\t\tposition={[0, 10, 0]}\n\t\t\t\t\tintensity={0.25}\n\t\t\t\t\tshadow-mapSize-width={1024}\n\t\t\t\t\tshadow-mapSize-height={1024}\n\t\t\t\t\tshadow-camera-far={50}\n\t\t\t\t\tshadow-camera-left={-10}\n\t\t\t\t\tshadow-camera-right={10}\n\t\t\t\t\tshadow-camera-top={10}\n\t\t\t\t\tshadow-camera-bottom={-10}\n\t\t\t\t/>\n\t\t\t\t{/* A light to help illumnate the spinning boxes */}\n\t\t\t\t<pointLight position={[-10, 0, -20]} intensity={0.5} />\n\t\t\t\t<pointLight position={[0, -10, 0]} intensity={0.5} />\n\t\t\t\t<group>\n\t\t\t\t\t{/* This mesh is the plane (The floor) */}\n\t\t\t\t\t<mesh\n\t\t\t\t\t\trotation={[-Math.PI / 2, 0, 0]}\n\t\t\t\t\t\tposition={[0, -3, 0]}\n\t\t\t\t\t\treceiveShadow\n\t\t\t\t\t>\n\t\t\t\t\t\t<planeBufferGeometry\n\t\t\t\t\t\t\tattach=\"geometry\"\n\t\t\t\t\t\t\targs={[100, 100]}\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t<shadowMaterial attach=\"material\" opacity={0.3} />\n\t\t\t\t\t</mesh>\n\t\t\t\t\t<SpinningMesh\n\t\t\t\t\t\tposition={[0, 1, 0]}\n\t\t\t\t\t\tcolor=\"lightblue\"\n\t\t\t\t\t\targs={[3, 2, 1]}\n\t\t\t\t\t\tspeed={2}\n\t\t\t\t\t/>\n\t\t\t\t\t<SpinningMesh\n\t\t\t\t\t\tposition={[-2, 1, -5]}\n\t\t\t\t\t\tcolor=\"pink\"\n\t\t\t\t\t\targs={[1, 1, 1]}\n\t\t\t\t\t\tspeed={6}\n\t\t\t\t\t/>\n\t\t\t\t\t<SpinningMesh\n\t\t\t\t\t\tposition={[5, 1, -2]}\n\t\t\t\t\t\tcolor=\"pink\"\n\t\t\t\t\t\targs={[1, 1, 1]}\n\t\t\t\t\t\tspeed={6}\n\t\t\t\t\t/>\n\t\t\t\t\t<SpinningMesh\n\t\t\t\t\t\tposition={[2, 1, 5]}\n\t\t\t\t\t\tcolor=\"pink\"\n\t\t\t\t\t\targs={[1, 1, 1]}\n\t\t\t\t\t\tspeed={6}\n\t\t\t\t\t/>\n\t\t\t\t\t<SpinningMesh\n\t\t\t\t\t\tposition={[-5, 1, 2]}\n\t\t\t\t\t\tcolor=\"pink\"\n\t\t\t\t\t\targs={[1, 1, 1]}\n\t\t\t\t\t\tspeed={6}\n\t\t\t\t\t/>\n\t\t\t\t</group>\n\t\t\t\t{/* Allows us to move the canvas around for different prespectives */}\n\t\t\t\t<OrbitControls />\n\t\t\t</Canvas>\n\t\t</>\n\t);\n};\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}